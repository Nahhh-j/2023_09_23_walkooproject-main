{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/LeftIcon.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4bff843a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"NewWalkRecordPage\"\n};\nconst _hoisted_2 = {\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  class: \"top_wrap\"\n};\nconst _hoisted_4 = {\n  class: \"top_left\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"top_center top_name\"\n}, \"산책기록\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"date-icon-container\"\n};\nconst _hoisted_7 = {\n  class: \"top_right\"\n};\nconst _hoisted_8 = {\n  class: \"date-text\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"modal-wrapper\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"modal-content\"\n};\nconst _hoisted_13 = {\n  class: \"calendar\"\n};\nconst _hoisted_14 = {\n  class: \"calendar-header\"\n};\nconst _hoisted_15 = {\n  class: \"calendar-days week-days\"\n};\nconst _hoisted_16 = {\n  class: \"calendar-days\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 1,\n  class: \"record-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"top\"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    class: \"icon\",\n    src: _imports_0,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n  })]), _hoisted_5])]), _createCommentVNode(\" middle\"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"p\", _hoisted_8, [_hoisted_9, _createTextVNode(\"  오늘은 \" + _toDisplayString(_ctx.currentDate), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n    class: \"calendar-icon\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleModal && _ctx.toggleModal(...args))\n  }, [_hoisted_11, _createTextVNode(\"📅\")])])])]), _createCommentVNode(\" 모달창 부분을 추가합니다. v-if로 showModal 변수가 true일 때만 모달창이 나타납니다. \"), _ctx.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.closeModalOnOverlay && _ctx.closeModalOnOverlay(...args))\n  }, [_createElementVNode(\"div\", _hoisted_12, [_createCommentVNode(\" 캘린더 내용 \"), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.prevMonth && _ctx.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"span\", null, _toDisplayString(_ctx.currentMonth), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.nextMonth && _ctx.nextMonth(...args))\n  }, \">\")]), _createCommentVNode(\" 요일 표시 부분 \"), _createElementVNode(\"div\", _hoisted_15, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.daysOfWeek, dayOfWeek => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: dayOfWeek,\n      class: \"day\"\n    }, _toDisplayString(dayOfWeek), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day,\n      class: \"day\",\n      onClick: $event => _ctx.selectDate(day)\n    }, _toDisplayString(day), 9 /* TEXT, PROPS */, _hoisted_17);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true), _ctx.showRecordPage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"p\", null, \"선택한 날짜 : \" + _toDisplayString(_ctx.selectedDate), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","src","onClick","_cache","$event","_ctx","$router","go","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_toDisplayString","currentDate","_hoisted_10","args","toggleModal","_hoisted_11","showModal","closeModalOnOverlay","_hoisted_12","_hoisted_13","_hoisted_14","prevMonth","currentMonth","nextMonth","_hoisted_15","_Fragment","_renderList","daysOfWeek","dayOfWeek","key","_hoisted_16","daysInMonth","day","selectDate","_hoisted_17","showRecordPage","_hoisted_18","selectedDate"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/NewWalkRecord.vue"],"sourcesContent":["<template>\n  <div class=\"NewWalkRecordPage\">\n    <!--top-->\n    <div class=\"top\">\n      <div class=\"top_wrap\">\n        <div class=\"top_left\">\n          <img\n            class=\"icon\"\n            src=\"../assets/LeftIcon.png\"\n            @click=\"$router.go(-1)\"\n          />\n        </div>\n        <p class=\"top_center top_name\">산책기록</p>\n      </div>\n    </div>\n    <!-- middle-->\n    <div class=\"date-icon-container\">\n      <div class=\"top_right\">\n        <p class=\"date-text\"><br />&emsp;&emsp;오늘은 {{ currentDate }}</p>\n        <div class=\"modal-wrapper\">\n          <div class=\"calendar-icon\" @click=\"toggleModal\"><br />📅</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 모달창 부분을 추가합니다. v-if로 showModal 변수가 true일 때만 모달창이 나타납니다. -->\n    <div class=\"modal\" v-if=\"showModal\" @click=\"closeModalOnOverlay\">\n      <div class=\"modal-content\">\n        <!-- 캘린더 내용 -->\n        <div class=\"calendar\">\n          <div class=\"calendar-header\">\n            <button @click=\"prevMonth\">&lt;</button>\n            <span>{{ currentMonth }}</span>\n            <button @click=\"nextMonth\">&gt;</button>\n          </div>\n          <!-- 요일 표시 부분 -->\n          <div class=\"calendar-days week-days\">\n            <div v-for=\"dayOfWeek in daysOfWeek\" :key=\"dayOfWeek\" class=\"day\">\n              {{ dayOfWeek }}\n            </div>\n          </div>\n          <div class=\"calendar-days\">\n            <div\n              v-for=\"day in daysInMonth\"\n              :key=\"day\"\n              class=\"day\"\n              @click=\"selectDate(day)\"\n            >\n              {{ day }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"record-page\" v-if=\"showRecordPage\">\n      <p>선택한 날짜 : {{ selectedDate }}</p>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport { defineComponent, ref, computed } from \"vue\";\nimport {\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  format,\n  addMonths,\n  subMonths,\n  getDay,\n} from \"date-fns\";\n\nexport default defineComponent({\n  name: \"NewWalkRecordpage\",\n  components: {\n    // Modal 컴포넌트 등록\n  },\n  setup() {\n    const currentDate = ref(new Date());\n    const showModal = ref(false);\n    const currentMonth = ref(new Date());\n\n    const showRecordPage = ref(false);\n    const selectedDate = ref(\"\");\n\n    const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\n    const daysInMonth = computed(() => {\n      const start = startOfMonth(currentMonth.value);\n      const end = endOfMonth(currentMonth.value);\n      const days = eachDayOfInterval({ start, end });\n\n      // 각 월의 첫째 날짜의 요일을 얻습니다.\n      const firstDayOfWeek = getDay(start);\n\n      // 첫째 날짜 이전에는 빈 칸을 생성합니다.\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        days.unshift(null);\n      }\n\n      return days.map((date) => (date ? format(date, \"dd\") : \"\"));\n    });\n\n    function showCalendarModal() {\n      showModal.value = true;\n    }\n    function closeModal() {\n      showModal.value = false;\n    }\n\n    function prevMonth() {\n      currentMonth.value = subMonths(currentMonth.value, 1);\n    }\n\n    function nextMonth() {\n      currentMonth.value = addMonths(currentMonth.value, 1);\n    }\n\n    function toggleModal() {\n      showModal.value = !showModal.value;\n    }\n\n    function closeModalOnOverlay() {\n      closeModal();\n    }\n\n    function selectDate(date) {\n      selectedDate.value = date;\n      console.log(selectedDate.value);\n      closeModal();\n      showRecordPage.value = true;\n    }\n\n    return {\n      currentDate: computed(() =>\n        format(currentDate.value, \"yyyy년 MM월 dd일\")\n      ),\n      showModal,\n      currentMonth: computed(() => format(currentMonth.value, \"MMMM yyyy\")),\n      daysInMonth,\n      daysOfWeek,\n      showCalendarModal,\n      prevMonth,\n      nextMonth,\n      closeModal,\n      toggleModal,\n      closeModalOnOverlay,\n      showRecordPage,\n      selectDate,\n      selectedDate,\n    };\n  },\n  methods: {\n    toggleButton(button) {\n      if (this.selectedButton === button) {\n        this.selectedButton = null;\n      } else {\n        this.selectedButton = button;\n      }\n      this.showController = this.selectedButton === \"controller\";\n      this.showState = this.selectedButton === \"state\";\n      this.showHistory = this.selectedButton === \"history\";\n    },\n  },\n});\n</script>\n\n<style scoped>\n.NewWalkRecordPage {\n  background-color: #f1f8ff;\n  width: 100%;\n  height: 100vh;\n  overflow-y: auto;\n}\n.WalkRecordPage .top {\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: center; /* 가로 중앙에 위치 */\n  align-items: flex-end;\n  background: #70b4cb;\n  padding: 1em;\n}\n.top {\n  position: relative;\n  box-sizing: border-box;\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: center; /* 가로 중앙에 위치 */\n  align-items: flex-end; /* 세로 위에서 70% 지점에 위치 */\n  background: #70b4cb;\n  padding: 1em;\n}\n.top_wrap {\n  width: 100%;\n  height: auto;\n  display: flex;\n  align-items: center;\n}\n.top_center {\n  width: 70%;\n  height: fit-content;\n  color: white;\n}\n.top_left {\n  width: 15%;\n  height: fit-content;\n}\n.top_right {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  font-family: \"Inter\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.3rem;\n  line-height: 21px;\n\n  text-align: center;\n  letter-spacing: -0.32px;\n\n  color: rgb(48, 48, 48);\n}\n.top_name {\n  text-align: center;\n  font-family: \"Inter\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 1.3rem;\n  line-height: 21px;\n\n  text-align: center;\n  letter-spacing: -0.32px;\n\n  color: #ffffff;\n}\n.modal {\n  /* 기존 배경색과 테두리를 없앱니다. */\n  background-color: transparent;\n  border: none;\n  box-shadow: none;\n  position: absolute;\n  top: -15%;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.modal[style*=\"display: block;\"] {\n  /* 모달창 열릴 때 애니메이션 효과 추가 */\n  animation: modalOpenAnim 0.3s ease-out;\n}\n@keyframes modalOpenAnim {\n  from {\n    transform: translateY(-50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n.modal-content {\n  background-color: rgb(249, 252, 255);\n  padding: 160px;\n  width: 10px;\n  height: 1%;\n  border: 2px solid #b1c9e0;\n  border-radius: 17px;\n  animation: modalOpenAnim 0.5s ease-out;\n}\n.modal-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: transparent; /* 배경색을 투명하게 설정합니다. */\n  z-index: 999;\n}\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n  padding: 8px;\n  background-color: #ffffff;\n}\n.calendar-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 8px;\n  padding: 8px;\n}\n.day {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n}\n.calendar-icon {\n  cursor: pointer;\n}\n.calendar-header button {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n.calendar-header button:hover {\n  background-color: #f0f0f0;\n}\n\n.record-page {\n  background-color: rgb(247, 156, 156);\n  width: 85vw;\n  margin: 0 auto;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}