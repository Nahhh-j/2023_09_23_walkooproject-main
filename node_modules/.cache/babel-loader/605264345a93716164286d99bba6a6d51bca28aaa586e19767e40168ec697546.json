{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/backbutton.png';\nimport _imports_1 from '../assets/people/Preview-8.png';\nimport _imports_2 from '../assets/people/Preview-3.png';\nimport _imports_3 from '../assets/walkicon.png';\nimport _imports_4 from '../assets/timericon.png';\nimport _imports_5 from '../assets/distanceicon.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"mappage\",\n  class: \"scrollable-content\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"black-bg\"\n};\nconst _hoisted_3 = {\n  class: \"white-bg\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"산책을 취소할까요?\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 1,\n  class: \"black-bg\"\n};\nconst _hoisted_6 = {\n  class: \"white-bg\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"산책을 마칠까요?\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  id: \"map\"\n};\nconst _hoisted_9 = {\n  class: \"uptab\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"imwith\",\n  src: _imports_1\n}, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"imwith\",\n  src: _imports_2\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"imwith\",\n  src: _imports_2\n}, null, -1 /* HOISTED */));\nconst _hoisted_13 = {\n  id: \"walkcontainer\"\n};\nconst _hoisted_14 = {\n  id: \"pointcontainer\"\n};\nconst _hoisted_15 = [\"src\"];\nconst _hoisted_16 = {\n  id: \"datacontainer\"\n};\nconst _hoisted_17 = {\n  class: \"walkdata\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_3\n}, null, -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"timerdata\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4\n}, null, -1 /* HOISTED */));\nconst _hoisted_21 = {\n  class: \"distancedata\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_5\n}, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Sidebar = _resolveComponent(\"Sidebar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 산책취소할건지 확인 모달창 \"), $data.openModal1 == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    class: \"yes\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/MainPage'))\n  }, \"확인\"), _createElementVNode(\"button\", {\n    class: \"no\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.openModal1 = false)\n  }, \"취소\")])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 산책종료할건지 확인 모달창 \"), $data.openModal2 == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"button\", {\n    class: \"quit\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.stopTimerAndNavigate && $options.stopTimerAndNavigate(...args))\n  }, \"확인\"), _createElementVNode(\"button\", {\n    class: \"close\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"취소\")])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Sidebar), _createElementVNode(\"div\", {\n    style: _normalizeStyle({\n      'margin-right': $setup.sidebarHeight,\n      sidebarWidth: $setup.sidebarWidth\n    })\n  }, [_createVNode(_component_router_view)], 4 /* STYLE */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    class: \"goBack\",\n    onClick: _cache[4] || (_cache[4] = $event => $data.openModal1 = true)\n  }), _hoisted_10, _hoisted_11, _hoisted_12])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, (image, index) => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: index,\n      src: image,\n      class: \"point\"\n    }, null, 8 /* PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"p\", null, _toDisplayString($data.averageNumberOfSteps) + \" 걸음\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"p\", null, _toDisplayString($options.formatTime($data.timer)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"p\", null, _toDisplayString($data.distance.toFixed(2)), 1 /* TEXT */)])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: _normalizeClass({\n      'walkstart': !$data.isWalking,\n      'walkend': $data.isWalking\n    }),\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.toggleTimer && $options.toggleTimer(...args))\n  }, _toDisplayString($data.isWalking ? 'Stop' : 'Start'), 3 /* TEXT, CLASS */)])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_imports_5","id","class","_createElementVNode","src","_createElementBlock","_hoisted_1","_createCommentVNode","$data","openModal1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","_ctx","$router","push","openModal2","_hoisted_5","_hoisted_6","_hoisted_7","args","$options","stopTimerAndNavigate","closeModal","_createVNode","_component_Sidebar","style","_normalizeStyle","$setup","sidebarHeight","sidebarWidth","_component_router_view","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_Fragment","_renderList","images","image","index","key","_hoisted_16","_hoisted_17","_hoisted_18","_toDisplayString","averageNumberOfSteps","_hoisted_19","_hoisted_20","formatTime","timer","_hoisted_21","_hoisted_22","distance","toFixed","type","_normalizeClass","isWalking","toggleTimer"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/KakaoMap.vue"],"sourcesContent":["<template>\n    <div id=\"mappage\" class=\"scrollable-content\">\n      <!-- 산책취소할건지 확인 모달창 -->\n      <div class=\"black-bg\" v-if=\"openModal1 == true\">\n          <div class=\"white-bg\">\n              <h2>산책을 취소할까요?</h2>\n              <button class=\"yes\" @click=\"$router.push('/MainPage')\">확인</button>\n              <button class=\"no\" @click=\"openModal1 = false\">취소</button>\n          </div>\n      </div>\n  \n      <!-- 산책종료할건지 확인 모달창 -->\n      <div class=\"black-bg\" v-if=\"openModal2 == true\">\n          <div class=\"white-bg\">\n              <h2>산책을 마칠까요?</h2>\n              <button class=\"quit\" @click=\"stopTimerAndNavigate\">확인</button>\n              <button class=\"close\" @click=\"closeModal\">취소</button>\n          </div>\n      </div>\n  \n      <Sidebar  />\n          <div :style=\"{ 'margin-right' : sidebarHeight, sidebarWidth }\">\n              <router-view />\n          </div>    \n      <div id=\"map\">        \n          <div class=\"uptab\">\n              <img src=\"@/assets/backbutton.png\" class=\"goBack\" @click=\"openModal1 = true\"/>\n  \n              <img class=\"imwith\"  src=\"../assets/people/Preview-8.png\">\n              <img class=\"imwith\" src=\"../assets/people/Preview-3.png\">\n              <img class=\"imwith\" src=\"../assets/people/Preview-3.png\">\n          </div>\n      </div>\n      <div id= \"walkcontainer\">\n          <div id=\"pointcontainer\">\n              <img v-for=\"(image, index) in images\" :key=\"index\" :src=\"image\" class=\"point\" />\n          </div>\n          <div id=\"datacontainer\">\n              <div class=\"walkdata\">\n                  <img src=\"../assets/walkicon.png\">\n                  <p>{{averageNumberOfSteps}} 걸음</p>\n              </div>\n              <div class=\"timerdata\">\n                  <img src=\"../assets/timericon.png\">\n                  <p>{{ formatTime(timer) }}</p>\n              </div>\n              <div class=\"distancedata\">\n                  <img src=\"../assets/distanceicon.png\">\n                  <p>{{ distance.toFixed(2) }}</p>\n              </div>\n          </div>\n  \n          <button \n              type=\"button\" \n              :class=\"{'walkstart': !isWalking, 'walkend' : isWalking }\" \n              @click=\"toggleTimer\">\n              {{ isWalking ? 'Stop' : 'Start' }}\n          </button>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  /* eslint-disable no-undef */\n  import Sidebar from './sidebar/SidebarComponent.vue'\n  import { sidebarWidth, sidebarHeight } from './sidebar/state';\n  import pointImage from '@/assets/point.png';\n  import getpointImage from '@/assets/getpoint.png';\n  \n  \n  function degreesToRadians(degrees) {\n                  return degrees * Math.PI / 180;\n  }\n  \n  function calculateDistance(point1, point2) {\n          const lat1 = point1.getLat();\n          const lng1 = point1.getLng();\n          const lat2 = point2.getLat();\n          const lng2 = point2.getLng();\n          const earthRadiusKm = 6371;\n          const dLat = degreesToRadians(lat2 - lat1);\n          const dLng = degreesToRadians(lng2 - lng1);\n          const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n                      Math.cos(degreesToRadians(lat1)) * Math.cos(degreesToRadians(lat2)) *\n                      Math.sin(dLng / 2) * Math.sin(dLng / 2);\n          const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n          const distance = earthRadiusKm * c;\n          return distance;\n  }\n  function calculateCaloriesBurned(distance) {\n    // Conversion factor (calories per kilometer)\n    const conversionFactor = 65;\n  \n    // Calculate calories burned\n    const caloriesBurned = distance * conversionFactor;\n  \n    return caloriesBurned;\n  }\n  \n  \n  \n  export default {\n      name: 'KakaoMap',\n      components: {\n          Sidebar,\n          \n      },\n      setup() {\n          return {sidebarWidth , sidebarHeight}\n      },\n      data() {\n          return {\n              map : null,\n              openModal1 : false,\n              openModal2 : false,\n              timer : 0,\n              isWalking : false,\n              distance : 0, // Keep track of total distance\n              watchId: null,\n              position: null,\n              marker: null,\n              previousPosition: null, // Declare previousPosition variable\n              timeoutId: null, // Declare timeoutId variable\n              timerId : null,\n              polyline: null,\n              images : Array(5).fill(pointImage),\n              averageNumberOfSteps: 0,\n          };\n      },\n      mounted() {\n          if (window.kakao && !window.kakao.maps) {\n              this.initMap();\n          } else {\n              const script = document.createElement('script');\n              script.onload = () => kakao.maps.load(this.initMap);\n              script.src = '//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=930ce9e25463ef7e86418ee9d4ba0575';\n              document.head.appendChild(script);\n          }\n      },\n  \n      methods: {\n          initMap() {\n  \n              const success = (position) => {\n                  this.position = position.coords;\n                  const { latitude, longitude } = position.coords;\n                  const currentPosition = new kakao.maps.LatLng(latitude, longitude);\n  \n                  if (!this.map) {\n                      const mapOptions = {\n                          center: new kakao.maps.LatLng(latitude, longitude),\n                          level: 3,\n                          MapTypeId: kakao.maps.MapTypeId.ROADMAP\n                      };\n                      this.map = new kakao.maps.Map(document.getElementById('map'), mapOptions);\n                      this.marker = new kakao.maps.Marker({ position: currentPosition, map: this.map });\n                      this.polyline = new kakao.maps.Polyline({\n                          map: this.map,\n                          path: [],\n                          strokeWeight: 5,\n                          strokeColor: '#00FF00',\n                          strokeOpacity: 0.7,\n                          strokeStyle: 'solid'\n                      });\n                      this.previousPosition = currentPosition;\n  \n                  } else {\n                      const path = this.polyline.getPath();\n                      path.push(currentPosition);\n                      this.polyline.setPath(path);\n  \n                      this.marker.setPosition(currentPosition);\n                      this.map.panTo(currentPosition);\n  \n                      if (this.previousPosition) {\n  \n                          this.previousPosition = currentPosition;\n  \n                          const newDistance = calculateDistance(this.previousPosition, currentPosition);\n                          this.distance += newDistance;\n                          console.log(`Distance traveled: ${newDistance.toFixed(3)} km`);\n                          console.log(`Total distance traveled: ${this.distance.toFixed(3)} km`);\n                      }\n                  }\n              };\n  \n              function error(err) {\n                  console.warn(`ERROR(${err.code}): ${err.message}`);\n              }\n              const watchOptions = { enableHighAccuracy: true };\n              this.watchId = navigator.geolocation.watchPosition(success, error, watchOptions);\n          \n          },\n          calculateAverageSteps(distance) {\n              const averageWalk = 0.762; // 평균적으로 성인 걸음 당 미터\n              const distanceInMeters = distance * 1000;\n              const averageNumberOfSteps = Math.round(distanceInMeters / averageWalk);\n              return averageNumberOfSteps;\n          },\n          startRandomMovement() {\n              if (this.position) {\n                  const { latitude, longitude } = this.position;\n                  const randomLat = latitude + Math.random() * 0.001;\n                  const randomLng = longitude + Math.random() * 0.001;\n                  const newPosition = new kakao.maps.LatLng(randomLat, randomLng);\n  \n                  const path = this.polyline.getPath();\n                  path.push(newPosition);\n                  this.polyline.setPath(path);\n  \n                  this.marker.setPosition(newPosition);\n                  this.map.panTo(newPosition);\n  \n                  if (this.previousPosition) {\n                      const newDistance = calculateDistance(this.previousPosition, newPosition);\n                      this.distance += newDistance;\n  \n                      const averageSteps = this.calculateAverageSteps(this.distance); // 걸음수 계산\n                      this.averageNumberOfSteps = averageSteps;\n  \n  \n                  }\n                  this.previousPosition = newPosition;\n  \n                  this.timeoutId = setTimeout(() => {\n                      this.startRandomMovement();\n                  }, 2000);\n              } else {\n              console.error('Position is not available.');\n              }\n          },\n          \n          stopTracking() {\n              navigator.geolocation.clearWatch(this.watchId);\n              this.distance = 0;\n              this.totalDistance = 0;\n              console.log('Tracking stopped.');\n          },\n          startTimer() {\n              this.timerId = setInterval(() => {\n                  this.timer += 1\n              }, 1000)\n              this.isWalking = true\n          },\n          stopTimer() {\n              clearInterval(this.timerId)\n              clearTimeout(this.timeoutId); // Add this line\n              this.timerId = null\n              this.isWalking = false\n          },\n          stopTimerAndNavigate() {\n              this.stopTimer();\n              this.totalDistance = this.distance; // Assign the current distance to totalDistance\n              this.distance = 0; // Reset the distance\n  \n              const caloriesBurned = calculateCaloriesBurned(this.totalDistance); // Calculate calories bWalkDayReporturned\n              console.log(`소모칼로리: ${caloriesBurned.toFixed(0)} `);\n  \n              const timeData = {\n                  min: Math.floor(this.timer / 60),\n                  seconds: this.timer % 60\n              };\n              console.log('timeData:', timeData);\n              console.log(`Final Distance: ${this.totalDistance.toFixed(3)} km`);\n  \n  \n              this.$router.push({\n                  name: 'WalkDayReport',\n                  query: {\n                      min: timeData.min,\n                      seconds: timeData.seconds,\n                      distance: this.totalDistance,\n                      calories: calculateCaloriesBurned(this.totalDistance), \n                      steps: this.averageNumberOfSteps\n                  },\n              });\n          },\n          toggleTimer() {\n              if (!this.isWalking) {\n                  // Start the timer and random movement\n                  this.isWalking = true;\n                  this.timer = 0;\n                  this.intervalId = setInterval(() => {\n                      this.timer++;\n  \n                      if (this.timer % 5 === 0) {\n                          this.changeImage();\n                      }\n                  }, 1000);\n  \n                  if (this.position) {\n                      this.startRandomMovement();\n                  }else{\n                      console.error('Position is not available.');\n                  }                \n                  // Call the startRandomMovement method\n              } else {\n                  // Stop the timer\n                  this.isWalking = false;\n                  clearInterval(this.intervalId);\n                  clearTimeout(this.timeoutId);\n  \n                  this.stopTimer();\n                  this.openModal2 = true;\n              }\n          },\n          changeImage() {\n              const newImage = getpointImage;\n              const currentIndex = Math.floor(this.timer / 5) - 1;\n  \n              if (currentIndex < this.images.length) {\n                  // Replace the image at the current index with the new image\n                  this.images.splice(currentIndex, 1, newImage);\n              }  \n          },\n          updateChangedImageCount(count) {\n              this.changedImageCount = count;\n          },\n          closeModal() {\n              this.openModal2 = false\n              this.startTimer()\n              this.startRandomMovement(); // Call the startRandomMovement method\n  \n          },\n          formatTime ( seconds ) {\n              const min = Math.floor(seconds / 60)\n              const remainingSeconds = seconds % 60\n              return `${min.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`\n          },\n          destroyed() {\n              this.stopTimer()\n          },\n      }\n  }\n  </script>\n  \n  <style scoped>\n  .scrollable-content {\n  overflow: hidden; /* 혹은 필요한 높이 값으로 설정 */\n}\n  .black-bg {\n    width: 100%;\n    height: 100%;\n    background: rgba(0,0,0,0.5);\n    position:absolute; \n    z-index: 4;\n  \n  }\n  .white-bg {\n    width: 89%;\n    background: white;\n    border-radius: 8px;\n    padding: 36px 0;\n    font-size: 20px;\n    margin-top: 50%;\n    margin-left: 6%;\n}\n  \n  .yes {\n      cursor: pointer;\n      border : none;\n      background: #7a0317;\n      color: white;\n      font-size: 30px;\n      font-weight: bold;\n      border-radius: 5px;\n      padding: 2vh 4vh;\n      margin: 20px;\n  }\n  .yes:hover {\n      background-color: rgba(182, 10, 10, 0.63);\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.3s\n  }\n  \n  .no {\n      cursor: pointer;\n      border : none;\n      background: #cacaca;\n      color: rgb(67, 67, 67);\n      font-size: 30px;\n      font-weight: bold;\n      border-radius: 5px;\n      padding: 2vh 4vh;\n      margin: 10px 20px;\n  }\n  .no:hover {\n      color: white;\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.3s\n  }\n  #mappage{ \n      background-color: #EBEFFF;\n      width:inherit;  \n      position:relative; \n      height: 100%;\n      width: 100%;\n  }\n  p {\n      font-weight: bolder;\n      letter-spacing: 3px;\n  }\n  \n  .goBack {\n      float: left;\n      width:4vh;\n      background-color:rgb(255, 255, 255);\n      margin-top: 35px;\n      margin-left: 2vh;\n      border-radius: 20px;\n  }\n  \n  #map {\n      width: 100%;\n      margin:auto;\n      height: 60vh;\n      z-index: 1;\n  }\n  .uptab {\n      z-index: 2;\n      height: 50px;\n      position: absolute;\n  }\n  .imwith {\n      width: 10vh;\n      margin: 10px;\n  }\n  \n  #walkcontainer {\n      width:100%;\n      height: 44vh;\n      background-color: rgb(244, 244, 244);\n  }\n  #pointcontainer {\n      height: 8vh;\n  }\n  #datacontainer {\n      height: 17vh;\n      display: flex;\n  }\n  \n  #datacontainer p {\n      font-size: 20px;\n  }\n  \n  .timerdata img, .walkdata img, .distancedata img {\n      width: 34%;\n      padding: 2vh 1vh;\n  }\n  \n  .point {\n      width: 5vh;\n      padding: 20px 10px;\n  }\n  \n  .walkdata {\n      flex : 1;\n  }\n  \n  .timerdata {\n      flex : 1;\n      \n  }\n  \n  .distancedata {\n      flex : 1;\n  }\n\n  .walkstart{\n    background-color: #77af9c;\n    color: #ffffff;\n    border: none;\n    display: inline-block;\n    margin: 1vh;\n    padding: 3vh 5vh;\n    border-radius: 15px;\n    font-size: 30px;\n    letter-spacing: 5px;\n}\n\n  .walkstart:hover {\n      background-color: #036439;\n      color: white;\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.5s\n  }\n  \n  .walkend {\n      background-color: #b40617;\n      color: #ffffff;\n      border: none;\n      display: inline-block;\n      margin: 1vh;\n    padding: 3vh 5vh;\n    border-radius: 15px;\n    font-size: 30px;\n    letter-spacing: 5px; \n  }\n  .walkend:hover {\n      background-color: #790511;\n      color: white;\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.5s\n  }\n  .quit {\n      cursor: pointer;\n      border : none;\n      background: #005d35;\n      color: white;\n      font-size: 30px;\n  \n      border-radius: 5px;\n      padding: 2vh 4vh;\n      margin: 20px;\n  }\n  .quit:hover {\n      box-shadow: inset 0 0 0 5px darkgreen;\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.3s\n  }\n  .close {\n      cursor: pointer;\n      border : none;\n      background: #cacaca;\n      color: rgb(67, 67, 67);\n      font-size: 30px;\n      font-weight: bold;\n      border-radius: 5px;\n      padding: 2vh 4vh;\n      margin: 10px 20px;\n  }\n  .close:hover {\n      color: white;\n      font-weight: bold;\n      transform: scale(1, 1);\n      transition: all 0.3s\n  }\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}