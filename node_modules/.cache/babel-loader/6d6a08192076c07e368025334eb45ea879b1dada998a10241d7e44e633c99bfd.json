{"ast":null,"code":"import pointImage from '@/assets/point.png';\nimport getpointImage from '@/assets/getpoint.png';\nexport default {\n  name: 'WalkDayReport',\n  data() {\n    return {\n      timeData: {\n        min: 0,\n        seconds: 0\n      },\n      totalDistance: 0,\n      images: Array(5).fill(pointImage),\n      steps: 0\n    };\n  },\n  mounted() {\n    this.timeData = {\n      min: parseInt(this.$route.query.min),\n      seconds: parseInt(this.$route.query.seconds)\n    };\n    console.log('timeData:', this.timeData);\n    this.totalDistance = parseFloat(this.$route.query.distance);\n    this.steps = parseInt(this.$route.query.steps);\n    this.changeImages();\n  },\n  computed: {\n    totalTime() {\n      return `${this.timeData.min.toString().padStart(2, '0')}:${this.timeData.seconds.toString().padStart(2, '0')}`;\n    },\n    formattedTotalDistance() {\n      return this.totalDistance.toFixed(2);\n    },\n    calculateCaloriesBurned() {\n      return distance => {\n        const calories = distance * 65;\n        return calories.toFixed(0);\n      };\n    }\n  },\n  methods: {\n    changeImages() {\n      const numImageChanges = Math.floor(this.timeData.seconds / 5);\n      const newImage = getpointImage;\n      for (let i = 0; i < numImageChanges; i++) {\n        if (i < this.images.length) {\n          this.images.splice(i, 1, newImage);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["pointImage","getpointImage","name","data","timeData","min","seconds","totalDistance","images","Array","fill","steps","mounted","parseInt","$route","query","console","log","parseFloat","distance","changeImages","computed","totalTime","toString","padStart","formattedTotalDistance","toFixed","calculateCaloriesBurned","calories","methods","numImageChanges","Math","floor","newImage","i","length","splice"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/WalkDayReport.vue"],"sourcesContent":["<template>\n    <div id=\"background\">\n        <div id=\"dailyreport\">\n            <div class=\"reportbody\">\n                <div class=\"walkfriend\">\n                    <h1>동행한 사람</h1>\n                    <div class=\"person-container\">\n                        <img src=\"../assets/people/Preview-8.png\">\n                        <img src=\"../assets/people/Preview-3.png\">\n                        <img src=\"../assets/people/Preview-3.png\">\n                    </div>\n                </div>\n                <div class=\"todaypoint\">\n                    <p>획득한<br/>도토리</p>\n                    <div class=\"point-container\">\n                        <img v-for=\"(image, index) in images\" :key=\"index\" :src=\"image\" class=\"point\" />\n                    </div>\n                </div>\n\n                <div class=\"todaydata_1\">\n                    <div class=\"walk\">\n                        <img src=\"../assets/walkicon.png\">\n                        <p>{{steps}} 걸음</p>\n\n                    </div>\n                    <div class=\"kcal\">\n                        <img src=\"../assets/kcal.png\">\n                        <p>{{calculateCaloriesBurned(this.totalDistance)}} 칼로리</p>\n                        \n                    </div>\n                </div>\n\n                <div class=\"todaydata_2\">\n                    <div class=\"time\">\n                        <img src=\"../assets/timericon.png\">\n                        <p>{{ totalTime }}</p>\n                        <KakaoMap />\n                    </div>\n                    \n                    <div class=\"long\">\n                        <img src=\"../assets/distanceicon.png\">\n                        <p>{{ totalDistance.toFixed(2)  }} KM</p>\n                    </div>\n                </div>\n            </div>\n            <button class=\"walkclose\" @click=\"$router.push('/MainPage')\">닫기</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport pointImage from '@/assets/point.png';\nimport getpointImage from '@/assets/getpoint.png';\n\nexport default {\n  name: 'WalkDayReport',\n    data() {\n        return {\n            timeData: {\n                min: 0,\n                seconds: 0\n            },\n            totalDistance : 0,\n            images: Array(5).fill(pointImage),\n            steps : 0,\n\n        };\n    },\n\n    mounted() {\n        this.timeData = {\n        min: parseInt(this.$route.query.min),\n        seconds: parseInt(this.$route.query.seconds)\n        };\n        console.log('timeData:', this.timeData);\n\n        this.totalDistance = parseFloat(this.$route.query.distance); \n        this.steps = parseInt(this.$route.query.steps);\n\n        this.changeImages();\n    },\n    computed: {\n        totalTime() {\n        return `${this.timeData.min.toString().padStart(2, '0')}:${this.timeData.seconds.toString().padStart(2, '0')}`;\n        },\n        formattedTotalDistance() {\n            return this.totalDistance.toFixed(2); \n        },\n        calculateCaloriesBurned() {\n            return (distance) => {\n                const calories = distance * 65; \n                return calories.toFixed(0);\n            }\n        },\n    },\n    methods: {\n        changeImages() {\n            const numImageChanges = Math.floor(this.timeData.seconds / 5);\n            const newImage = getpointImage;\n\n            for (let i = 0; i < numImageChanges; i++) {\n                if (i < this.images.length) {\n                this.images.splice(i, 1, newImage);\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n#background {\n    background-color: rgb(141, 139, 139);\n    position: relative;\n    width: inherit;\n    padding: 40px;\n    height: 100vh;\n}\n\n#dailyreport {\n    background-color: rgb(255, 255, 255);\n    border-radius: 50px;\n    height: 73%;\n    margin-top: 1vh;\n    padding: 50px 0;\n\n}\n.todaypoint {\n    padding: 0 70px;\n    display: flex; \n}\n\n.point-container {\n    display: flex;\n}\n\n.walkfriend {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    border: 7px solid rgb(179, 179, 179);\n    background-color: rgb(255, 255, 255);\n    height: 8vh;\n    border-radius: 30px;\n    margin: 19px 0;\n    padding: 0 20px;\n}\n\n.walkfriend h1 {\n    font-size: 1.4vh;\n}\n\n.person-container {\n    display: flex;\n    align-items: center;\n    margin-left: 10px;\n}\n\n.person-container img {\n    margin: 0 5px;\n}\n\n.todaypoint {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    border: 7px solid rgb(179, 179, 179);\n    background-color: rgb(255, 255, 255);\n    height: 8vh;\n    border-radius: 30px;\n    margin: 19px 0;\n    padding: 0 20px;\n}\n\n.todaypoint p {\n    font-weight: bold;\n    text-align: center;\n    font-size: 1.5vh;\n}\n\n.point-container {\n    display: flex;\n    align-items: center;\n    margin-left: 10px;\n}\n\n.point {\n    width: 3vh;\n    height: 3vh;\n    margin-right: 5px;\n}\n\n.reportbody {\n    background-color: rgba(218, 213, 213, 0.893);\n    display: block;\n    height: 90%;\n    padding: 23px;\n}\n\n.walkfriend img {\n    text-align: right;\n    margin: 5px;\n    width:5vh;\n}\n\n.walkfriend, .todaypoint{\n    border: 7px solid rgb(179, 179, 179);\n    background-color: rgb(255, 255, 255);\n    height: 9vh;\n    border-radius: 30px;\n    text-align: left;\n    margin: 1vh 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    justify-content: space-evenly;\n}\n\n.todaydata_1, .todaydata_2{\n    height : 20vh;\n    width: 100%;\n    display: flex; \n    margin: auto;\n    margin-left: 0%;\n}\n\n.todaydata_1 img, .todaydata_2 img {\n    width: 8vh;\n    margin: 2vh;\n    \n}\n\n.todaydata_1 p, .todaydata_2 p {\n    font-size: 3vh;\n}\n\n\n.walk, .kcal, .time, .long {\n    flex: 1;\n    background-color:rgb(228, 228, 228);\n    border: 5px solid rgb(142, 141, 141);\n}\n\n.walk {\n    border-radius: 30px 0 0 0 ;\n}\n.kcal {\n    border-radius: 0 30px 0 0 ;\n}\n.time {\n    border-radius: 0 0 0 30px;\n}\n.long {\n    border-radius: 0 0 30px 0 ;\n}\n\n.walkclose {\n    cursor: pointer;\n    border : none;\n    background: #02311e;\n    color: white;\n    font-size: 30px;\n    border-radius: 20px;\n    padding: 0.8vh 4vh;\n    margin: 0.8vh;\n}\n.walkclose:hover {\n    background-color: rgba(182, 10, 10, 0.63);\n    font-weight: bold;\n    transform: scale(1, 1);\n    transition: all 0.3s\n}\n</style>"],"mappings":"AAmDA,OAAOA,UAAS,MAAO,oBAAoB;AAC3C,OAAOC,aAAY,MAAO,uBAAuB;AAEjD,eAAe;EACbC,IAAI,EAAE,eAAe;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE;QACNC,GAAG,EAAE,CAAC;QACNC,OAAO,EAAE;MACb,CAAC;MACDC,aAAY,EAAI,CAAC;MACjBC,MAAM,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACV,UAAU,CAAC;MACjCW,KAAI,EAAI;IAEZ,CAAC;EACL,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACR,QAAO,GAAI;MAChBC,GAAG,EAAEQ,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACV,GAAG,CAAC;MACpCC,OAAO,EAAEO,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACT,OAAO;IAC3C,CAAC;IACDU,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACb,QAAQ,CAAC;IAEvC,IAAI,CAACG,aAAY,GAAIW,UAAU,CAAC,IAAI,CAACJ,MAAM,CAACC,KAAK,CAACI,QAAQ,CAAC;IAC3D,IAAI,CAACR,KAAI,GAAIE,QAAQ,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACJ,KAAK,CAAC;IAE9C,IAAI,CAACS,YAAY,CAAC,CAAC;EACvB,CAAC;EACDC,QAAQ,EAAE;IACNC,SAASA,CAAA,EAAG;MACZ,OAAQ,GAAE,IAAI,CAAClB,QAAQ,CAACC,GAAG,CAACkB,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAG,IAAI,CAACpB,QAAQ,CAACE,OAAO,CAACiB,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;IAC9G,CAAC;IACDC,sBAAsBA,CAAA,EAAG;MACrB,OAAO,IAAI,CAAClB,aAAa,CAACmB,OAAO,CAAC,CAAC,CAAC;IACxC,CAAC;IACDC,uBAAuBA,CAAA,EAAG;MACtB,OAAQR,QAAQ,IAAK;QACjB,MAAMS,QAAO,GAAIT,QAAO,GAAI,EAAE;QAC9B,OAAOS,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC;MAC9B;IACJ;EACJ,CAAC;EACDG,OAAO,EAAE;IACLT,YAAYA,CAAA,EAAG;MACX,MAAMU,eAAc,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC5B,QAAQ,CAACE,OAAM,GAAI,CAAC,CAAC;MAC7D,MAAM2B,QAAO,GAAIhC,aAAa;MAE9B,KAAK,IAAIiC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIJ,eAAe,EAAEI,CAAC,EAAE,EAAE;QACtC,IAAIA,CAAA,GAAI,IAAI,CAAC1B,MAAM,CAAC2B,MAAM,EAAE;UAC5B,IAAI,CAAC3B,MAAM,CAAC4B,MAAM,CAACF,CAAC,EAAE,CAAC,EAAED,QAAQ,CAAC;QAClC;MACJ;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}