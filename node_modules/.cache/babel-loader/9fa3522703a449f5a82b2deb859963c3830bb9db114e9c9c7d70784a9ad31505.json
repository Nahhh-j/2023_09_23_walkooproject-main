{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport html2canvas from 'html2canvas';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/dist/sweetalert2.css';\nimport axios from 'axios';\nexport default {\n  name: 'startpageComponent',\n  data() {\n    return {\n      petName: ''\n    };\n  },\n  methods: {\n    async captureAndSaveImage() {\n      if (!this.selectedpetType || !this.petName) {\n        const result = await Swal.fire({\n          icon: 'warning',\n          title: '펫 설정을 안하시겠습니까?',\n          showCancelButton: true,\n          confirmButtonText: '예',\n          cancelButtonText: '아니요'\n        });\n        if (result.isConfirmed) {\n          this.router.push('/MainPage');\n          return;\n        } else {\n          return;\n        }\n      }\n      const elementToCapture = this.$refs.transparentCircle;\n      const canvas = await html2canvas(elementToCapture);\n      const imageDataURL = canvas.toDataURL('image/png');\n\n      // Base64 -> File 변환\n      const byteString = atob(imageDataURL.split(',')[1]);\n      const mimeString = imageDataURL.split(',')[0].split(':')[1].split(';')[0];\n      const arrayBuffer = new ArrayBuffer(byteString.length);\n      const uintArray = new Uint8Array(arrayBuffer);\n      for (let i = 0; i < byteString.length; i++) {\n        uintArray[i] = byteString.charCodeAt(i);\n      }\n      const file = new File([uintArray], 'image.png', {\n        type: mimeString\n      });\n\n      // 서버로 전송\n      const formData = new FormData();\n      formData.append('image', file);\n      formData.append('memberId', 1);\n      formData.append('petName', this.petName);\n      try {\n        const response = await axios.post('http://localhost:8080/api/save-pet-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 200) {\n          this.$router.push({\n            name: 'mainpage'\n          });\n        } else {\n          alert('저장에 실패하였습니다.');\n        }\n      } catch (error) {\n        alert('저장에 실패하였습니다.');\n      }\n\n      // const downloadLink = document.createElement('a');\n      // downloadLink.href = imageDataURL;\n      // downloadLink.download = 'captured_image.png';\n      // downloadLink.click();\n      // this.$router.push({ name: 'mainpage' });\n    }\n  },\n\n  setup() {\n    const router = useRouter();\n\n    // 페이지 진입 시 이미 이미지가 등록된 사용자는 다른 페이지로 이동\n    onMounted(() => {\n      try {\n        axios.get('http://localhost:8080/api/member-info', {\n          params: {\n            memberId: 2\n          }\n        }).then(res => {\n          console.log(res);\n          if (res.status === 200) {\n            if (res.data.memberImage) {\n              if (res.data.petImage) {\n                // 펫 정보가 저장되어 있으면 메인 페이지로 이동\n                router.push({\n                  name: 'mainpage'\n                });\n              }\n            } else {\n              // 사용자 정보가 저장되어 있지 않으면 시작 페이지로 이동\n              router.push({\n                name: 'startpagec'\n              });\n            }\n          } else {\n            alert('에러');\n          }\n        }).catch(Error => alert(Error));\n      } catch (error) {\n        alert('에러');\n      }\n    });\n    const petType = ref('pet');\n    const selectedMenu = ref('pet');\n    const selectedpetType = ref('');\n    const setpetType = type => {\n      if (petType.value === 'pet') {\n        selectedpetType.value = type;\n      }\n    };\n    return {\n      petType,\n      router,\n      selectedMenu,\n      selectedpetType,\n      setpetType\n    };\n  }\n};","map":{"version":3,"names":["onMounted","ref","useRouter","html2canvas","Swal","axios","name","data","petName","methods","captureAndSaveImage","selectedpetType","result","fire","icon","title","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","router","push","elementToCapture","$refs","transparentCircle","canvas","imageDataURL","toDataURL","byteString","atob","split","mimeString","arrayBuffer","ArrayBuffer","length","uintArray","Uint8Array","i","charCodeAt","file","File","type","formData","FormData","append","response","post","headers","status","$router","alert","error","setup","get","params","memberId","then","res","console","log","memberImage","petImage","catch","Error","petType","selectedMenu","setpetType","value"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/StartPageP.vue"],"sourcesContent":["<template>\n  <div class=\"extra-space\">\n    <img src=\"../assets/배경2.png\" alt=\"Extra Image\" style=\"height: 600px; width: 100%\" />\n    <div class=\"complete-button\" @click=\"captureAndSaveImage\">완료</div>\n    <div class=\"transparent-circle\" ref=\"transparentCircle\">\n      <img\n        v-if=\"selectedpetType\"\n        :src=\"require(`../assets/icon/${selectedpetType}.png`)\"\n        style=\"\n          width: 75%;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n        \"\n      />\n    </div>\n    <div class=\"startpage\">\n      <div class=\"bottom-box\">\n        <div class=\"border-box\" :class=\"{ 'out-box': petType === 'out' }\">\n          <div class=\"pet-name-input\">\n            <input\n              v-model=\"petName\"\n              placeholder=\"Name\"\n              style=\"\n                width: 90%;\n                padding: 10px;\n                border: 2px solid #ccc;\n                border-radius: 5px;\n                margin-bottom: 1vh;\n              \"\n            />\n          </div>\n\n          <div class=\"menu-box\">\n            <div class=\"menu-bar\">\n              <div class=\"menu\" @click=\"selectedMenu = 'pet'\"></div>\n            </div>\n            <div class=\"sub-box pet-sub-box\" v-if=\"selectedMenu === 'pet' && petType === 'pet'\">\n              <div class=\"pet-images-container\">\n                <div class=\"pet-image\" @click=\"setpetType('dog1')\">\n                  <img src=\"@/assets/icon/dog1.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog2')\">\n                  <img src=\"@/assets/icon/dog2.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog3')\">\n                  <img src=\"@/assets/icon/dog3.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog4')\">\n                  <img src=\"@/assets/icon/dog4.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog5')\">\n                  <img src=\"@/assets/icon/dog5.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog6')\">\n                  <img src=\"@/assets/icon/dog6.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog7')\">\n                  <img src=\"@/assets/icon/dog7.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog8')\">\n                  <img src=\"@/assets/icon/dog8.png\" />\n                </div>\n                <div class=\"pet-image\" @click=\"setpetType('dog9')\">\n                  <img src=\"@/assets/icon/dog9.png\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { onMounted, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport html2canvas from 'html2canvas';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/dist/sweetalert2.css';\nimport axios from 'axios';\n\nexport default {\n  name: 'startpageComponent',\n  data() {\n    return {\n      petName: '',\n    };\n  },\n  methods: {\n    async captureAndSaveImage() {\n      if (!this.selectedpetType || !this.petName) {\n        const result = await Swal.fire({\n          icon: 'warning',\n          title: '펫 설정을 안하시겠습니까?',\n          showCancelButton: true,\n          confirmButtonText: '예',\n          cancelButtonText: '아니요',\n        });\n\n        if (result.isConfirmed) {\n          this.router.push('/MainPage');\n          return;\n        } else {\n          return;\n        }\n      }\n\n      const elementToCapture = this.$refs.transparentCircle;\n      const canvas = await html2canvas(elementToCapture);\n      const imageDataURL = canvas.toDataURL('image/png');\n\n      // Base64 -> File 변환\n      const byteString = atob(imageDataURL.split(',')[1]);\n      const mimeString = imageDataURL.split(',')[0].split(':')[1].split(';')[0];\n\n      const arrayBuffer = new ArrayBuffer(byteString.length);\n      const uintArray = new Uint8Array(arrayBuffer);\n\n      for (let i = 0; i < byteString.length; i++) {\n        uintArray[i] = byteString.charCodeAt(i);\n      }\n      const file = new File([uintArray], 'image.png', { type: mimeString });\n\n      // 서버로 전송\n      const formData = new FormData();\n      formData.append('image', file);\n      formData.append('memberId', 1);\n      formData.append('petName', this.petName);\n      try {\n        const response = await axios.post('http://localhost:8080/api/save-pet-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n        });\n        if (response.status === 200) {\n          this.$router.push({ name: 'mainpage' });\n        } else {\n          alert('저장에 실패하였습니다.');\n        }\n      } catch (error) {\n        alert('저장에 실패하였습니다.');\n      }\n\n      // const downloadLink = document.createElement('a');\n      // downloadLink.href = imageDataURL;\n      // downloadLink.download = 'captured_image.png';\n      // downloadLink.click();\n      // this.$router.push({ name: 'mainpage' });\n    },\n  },\n  setup() {\n    const router = useRouter();\n\n    // 페이지 진입 시 이미 이미지가 등록된 사용자는 다른 페이지로 이동\n    onMounted(() => {\n      try {\n        axios\n          .get('http://localhost:8080/api/member-info', { params: { memberId: 2 } })\n          .then((res) => {\n            console.log(res);\n            if (res.status === 200) {\n              if (res.data.memberImage) {\n                if (res.data.petImage) {\n                  // 펫 정보가 저장되어 있으면 메인 페이지로 이동\n                  router.push({ name: 'mainpage' });\n                }\n              } else {\n                // 사용자 정보가 저장되어 있지 않으면 시작 페이지로 이동\n                router.push({ name: 'startpagec' });\n              }\n            } else {\n              alert('에러');\n            }\n          })\n          .catch((Error) => alert(Error));\n      } catch (error) {\n        alert('에러');\n      }\n    });\n\n    const petType = ref('pet');\n    const selectedMenu = ref('pet');\n    const selectedpetType = ref('');\n\n    const setpetType = (type) => {\n      if (petType.value === 'pet') {\n        selectedpetType.value = type;\n      }\n    };\n\n    return {\n      petType,\n      router,\n      selectedMenu,\n      selectedpetType,\n      setpetType,\n    };\n  },\n};\n</script>\n\n<style>\n.pet-images-container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n}\n\n.pet-image {\n  width: 100%;\n  height: 90%;\n  text-align: center;\n  border-radius: 5px;\n  background-color: #dfdfdf;\n}\n\n.pet-image img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n\n.menu-box {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 50vh;\n  background-color: #ffffff;\n  position: relative;\n  font-family: 'IBM Plex Sans KR', sans-serif;\n  border-top-left-radius: 40px;\n  border-top-right-radius: 40px;\n}\n\n.menu-bar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 9vh;\n  background-color: #ffffff;\n  /* Add Rounded Effect at the Top */\n  border-top-left-radius: 40px;\n  border-top-right-radius: 40px;\n  /* Add Border Only at the Top */\n  border-top: 7px solid #cbcbcb;\n  position: absolute;\n  top: 0;\n  left: 0;\n  border-bottom: 2px solid #cbcbcb;\n}\n\n.menu {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 21%;\n  height: 90%;\n  margin: 0 10px;\n  font-size: 1.5rem;\n  font-weight: bold;\n  background-color: #ffffff;\n  border-radius: 25px;\n}\n\n.menu:hover {\n  background-color: #ffffff;\n}\n\n.sub-box {\n  width: 100%;\n  height: 100%;\n  padding: 29px;\n  border-top-left-radius: 40px;\n  border-top-right-radius: 40px;\n  box-sizing: border-box;\n  overflow-y: auto;\n  margin-top: 10vh;\n}\n\n.button-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.button {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 96vh;\n  height: 5vh;\n  overflow: hidden;\n  margin: 0 20px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  background-color: #dfdfdf;\n  border-radius: 100px;\n}\n\n.button:hover {\n  transform: scale(1.1);\n}\n\n.button img {\n  width: 3vh;\n  height: 50%;\n}\n\n.bottom-box {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 50vh;\n}\n\n.border-box {\n  width: 100%;\n}\n\n.button-container button {\n  margin-top: -1vh;\n  width: 13vh;\n  height: 3vh;\n  background-color: #f5f5f5;\n  border-radius: 13px;\n  margin-right: 10px;\n  cursor: pointer;\n}\n\n.transparent-circle {\n  width: 60%;\n  padding-top: 60%;\n  border-radius: 50%;\n  background-color: transparent;\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.complete-button {\n  position: absolute;\n  width: 12vh;\n  height: 7vh;\n  right: 2vh;\n  top: 1.5vh;\n  border-radius: 12%;\n  background-color: #ffffff;\n  color: black;\n  font-size: 1.5rem;\n  font-weight: bold;\n  cursor: pointer;\n  border: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}