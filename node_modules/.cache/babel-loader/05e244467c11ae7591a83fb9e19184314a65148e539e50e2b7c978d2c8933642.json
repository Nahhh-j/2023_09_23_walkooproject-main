{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport data from \"../../assets/rankData.js\";\nexport default {\n  name: \"friendrankComponent\",\n  data() {\n    return {\n      data: data\n    };\n  },\n  methods: {\n    MyRankPage() {\n      this.$router.push(\"/ranking\");\n    },\n    FriendRankPage() {\n      this.$router.push(\"/friendRank\");\n    }\n  },\n  computed: {\n    sortedFriends() {\n      // friends 배열을 range 값에 따라 내림차순으로 정렬하여 반환하는 새로운 배열을 생성\n      const sortedArr = [...this.data[1].friends].sort((a, b) => b.range - a.range);\n      return sortedArr;\n    }\n  }\n};","map":{"version":3,"names":["data","name","methods","MyRankPage","$router","push","FriendRankPage","computed","sortedFriends","sortedArr","friends","sort","a","b","range"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/rank/FriendRank.vue"],"sourcesContent":["<template>\n  <div id=\"Friendrankpg\">\n    <!-- top -->\n    <div class=\"top\">\n      <div class=\"top_wrap\">\n        <div class=\"top_left\">\n          <img\n            class=\"icon\"\n            src=\"@/assets/backbutton.png\"\n            @click=\"$router.go(-1)\"\n          />\n        </div>\n        <p class=\"top_center\">랭킹</p>\n        <div class=\"top_right\"></div>\n      </div>\n    </div>\n\n    <div class=\"Rank_middle\">\n      <!-- <div class=\"myRank_wrap\">\n        <h3 id=\"myRank\">친구 랭킹</h3>\n      </div> -->\n      <div class=\"buttons_container\">\n        <button @click=\"MyRankPage\" class=\"rank_button\">나의 랭킹</button>\n        <button @click=\"FriendRankPage\" class=\"click_rank_button\">친구 랭킹</button>\n      </div>\n\n      <div class=\"rank_margin\">\n        <!-- <div class=\"rank\"> -->\n          <h3 class=\"top_10\">TOP 10</h3>\n          <div\n            class=\"green-rank\"\n            v-for=\"(friend, index) in sortedFriends.slice(0, 10)\"\n            :key=\"index\"\n          >\n            <p v-if=\"index === 0\" class=\"rank-icon\">&#x1F947;</p>\n            <p v-else-if=\"index === 1\" class=\"rank-icon\">&#x1F948;</p>\n            <p v-else-if=\"index === 2\" class=\"rank-icon\">&#x1F949;</p>\n            <div class=\"friend-container\">\n              <div class=\"profile\">\n                <img :src=\"friend.img\" />\n              </div>\n              <div class=\"friend-info\">\n                <p class=\"title-name\">{{ friend.name }}</p>\n                <p class=\"walk-content\">총 {{ friend.range }}KM 산책</p>\n                <p>총 {{ friend.time }}시간 산책</p>\n                <p>동반 산책 : {{ friend.mate }}회</p>\n              </div>\n            </div>\n          </div>\n        <!-- </div> -->\n      </div>\n    </div>\n\n    <!-- <div class=\"page-indicator\">\n      <span class=\"empty\"></span>\n      <span class=\"empty\"></span>\n      <span class=\"filled\"></span>\n      <span class=\"empty\"></span>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport data from \"../../assets/rankData.js\";\n\nexport default {\n  name: \"friendrankComponent\",\n  data() {\n    return {\n      data: data,\n    };\n  },\n  methods: {\n    MyRankPage() {\n      this.$router.push(\"/ranking\");\n    },\n    FriendRankPage() {\n      this.$router.push(\"/friendRank\");\n    },\n  },\n  computed: {\n    sortedFriends() {\n      // friends 배열을 range 값에 따라 내림차순으로 정렬하여 반환하는 새로운 배열을 생성\n      const sortedArr = [...this.data[1].friends].sort(\n        (a, b) => b.range - a.range\n      );\n      return sortedArr;\n    },\n  },\n};\n</script>\n\n<style scoped>\n#Friendrankpg {\n  width: 100%;\n  height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.green-rank {\n  position: relative; /* 부모 요소에 대해 상대적인 위치 설정 */\n  margin: 5%;\n  margin-bottom: 7%;\n}\n\n.profile {\n  width: 33%;\n  height: 33%;\n  border-radius: 50%;\n  overflow: hidden;\n  margin: 2%;\n  padding-right: 4%;\n}\n.rank-icon {\n  position: absolute; /* 이미지에 대해 절대적인 위치 설정 */\n  left: -25px;\n  top: -20px;\n  font-size: 50px;\n  height: 100px; /* 이미지 크기 설정 */\n  z-index: 1; /* 이미지를 다른 요소들 위로 렌더링하기 위한 z-index 설정 */\n}\n\n.title-name{\n  padding-bottom: 3%;\n}\n</style>"],"mappings":";AA+DA,OAAOA,IAAG,MAAO,0BAA0B;AAE3C,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BD,IAAIA,CAAA,EAAG;IACL,OAAO;MACLA,IAAI,EAAEA;IACR,CAAC;EACH,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;IAC/B,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF,CAAC;EACDE,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd;MACA,MAAMC,SAAQ,GAAI,CAAC,GAAG,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAACU,OAAO,CAAC,CAACC,IAAI,CAC9C,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAI,GAAIF,CAAC,CAACE,KACxB,CAAC;MACD,OAAOL,SAAS;IAClB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}