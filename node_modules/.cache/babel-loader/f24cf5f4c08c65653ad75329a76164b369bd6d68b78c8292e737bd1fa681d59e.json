{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '@/assets/backbutton.png';\nimport _imports_1 from '../assets/people/Preview-8.png';\nimport _imports_2 from '../assets/people/Preview-3.png';\nimport _imports_3 from '../assets/point.png';\nimport _imports_4 from '../assets/walkicon.png';\nimport _imports_5 from '../assets/kcal.png';\nimport _imports_6 from '../assets/timericon.png';\nimport _imports_7 from '../assets/distanceicon.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-4bff843a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"NewWalkRecordPage\"\n};\nconst _hoisted_2 = {\n  class: \"top\"\n};\nconst _hoisted_3 = {\n  class: \"top_wrap\"\n};\nconst _hoisted_4 = {\n  class: \"top_left\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"top_center\"\n}, \"산책기록\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"top_right\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"middle\"\n};\nconst _hoisted_8 = {\n  class: \"middle_top\"\n};\nconst _hoisted_9 = {\n  class: \"middle_content\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"record_date\"\n};\nconst _hoisted_11 = {\n  key: 1,\n  class: \"walkdata_list\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  key: 2,\n  class: \"walkracord_background\"\n};\nconst _hoisted_14 = {\n  class: \"dailyreport\"\n};\nconst _hoisted_15 = {\n  class: \"reportbody\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"walkfriend\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"동행한 사람\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"person-container\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_1\n}), /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_2\n})])], -1 /* HOISTED */));\nconst _hoisted_17 = {\n  class: \"todaypoint\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createTextVNode(\"획득한\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"도토리\")], -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"point-container\"\n};\nconst _hoisted_20 = {\n  class: \"todaydata_1\"\n};\nconst _hoisted_21 = {\n  class: \"walk\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_4\n}, null, -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"kcal\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_5\n}, null, -1 /* HOISTED */));\nconst _hoisted_25 = {\n  class: \"todaydata_2\"\n};\nconst _hoisted_26 = {\n  class: \"time\"\n};\nconst _hoisted_27 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_6\n}, null, -1 /* HOISTED */));\nconst _hoisted_28 = {\n  class: \"long\"\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_7\n}, null, -1 /* HOISTED */));\nconst _hoisted_30 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_31 = {\n  class: \"modal_content\"\n};\nconst _hoisted_32 = {\n  class: \"calendar\"\n};\nconst _hoisted_33 = {\n  class: \"calendar_header\"\n};\nconst _hoisted_34 = {\n  class: \"calendar_days week-days\"\n};\nconst _hoisted_35 = {\n  class: \"calendar_days\"\n};\nconst _hoisted_36 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" top \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    class: \"icon\",\n    src: _imports_0,\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n  })]), _hoisted_5, _hoisted_6])]), _createCommentVNode(\" middle\"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, \"오늘은 \" + _toDisplayString(_ctx.currentDate), 1 /* TEXT */), _createElementVNode(\"div\", {\n    class: \"calendar_icon\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleModal && _ctx.toggleModal(...args))\n  }, \"ㅤ📅\")]), _createElementVNode(\"div\", _hoisted_9, [_ctx.showRecordPage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"p\", null, \"선택한 날짜 : \" + _toDisplayString(_ctx.currentMonth) + \" \" + _toDisplayString(_ctx.selectedDate) + \"일\", 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true), _ctx.showRecordPage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredRecords, record => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: record.date,\n      onClick: $event => _ctx.openDailyReport(record)\n    }, [_createElementVNode(\"p\", null, _toDisplayString(record.date) + \" \" + _toDisplayString(record.title), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_12);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _ctx.showWalkRecord && _ctx.selectedRecord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"div\", _hoisted_17, [_hoisted_18, _createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedRecord.walkData.points, point => {\n    return _openBlock(), _createElementBlock(\"img\", {\n      key: point,\n      src: _imports_3,\n      class: \"point\"\n    });\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_hoisted_22, _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecord.walkData.steps) + \" 걸음\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_hoisted_24, _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecord.walkData.calories) + \" 칼로리\", 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"div\", _hoisted_26, [_hoisted_27, _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecord.walkData.time), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_28, [_hoisted_29, _createElementVNode(\"p\", null, _toDisplayString(_ctx.selectedRecord.walkData.distance), 1 /* TEXT */)])])]), _createElementVNode(\"button\", {\n    class: \"walkclose\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.closeWalkRecord && _ctx.closeWalkRecord(...args))\n  }, \"닫기\")])])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 모달창 부분을 추가합니다. v-if로 showModal 변수가 true일 때만 모달창이 나타납니다. \"), _ctx.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_createCommentVNode(\" 캘린더 내용 \"), _createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", _hoisted_33, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.prevMonth && _ctx.prevMonth(...args))\n  }, \"<\"), _createElementVNode(\"span\", null, _toDisplayString(_ctx.currentMonth), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.nextMonth && _ctx.nextMonth(...args))\n  }, \">\")]), _createCommentVNode(\" 요일 표시 부분 \"), _createElementVNode(\"div\", _hoisted_34, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.daysOfWeek, dayOfWeek => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: dayOfWeek,\n      class: \"day\"\n    }, _toDisplayString(dayOfWeek), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_35, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.daysInMonth, day => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: day,\n      class: \"day\",\n      onClick: $event => _ctx.selectDate(day)\n    }, _toDisplayString(day), 9 /* TEXT, PROPS */, _hoisted_36);\n  }), 128 /* KEYED_FRAGMENT */))])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","_imports_2","_imports_3","_imports_4","_imports_5","_imports_6","_imports_7","class","_createElementVNode","src","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","_ctx","$router","go","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","currentDate","args","toggleModal","_hoisted_9","showRecordPage","_hoisted_10","currentMonth","selectedDate","_hoisted_11","_Fragment","_renderList","filteredRecords","record","key","date","openDailyReport","title","showWalkRecord","selectedRecord","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","walkData","points","point","_hoisted_20","_hoisted_21","_hoisted_22","steps","_hoisted_23","_hoisted_24","calories","_hoisted_25","_hoisted_26","_hoisted_27","time","_hoisted_28","_hoisted_29","distance","closeWalkRecord","showModal","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","prevMonth","nextMonth","_hoisted_34","daysOfWeek","dayOfWeek","_hoisted_35","daysInMonth","day","selectDate","_hoisted_36"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/NewWalkRecord.vue"],"sourcesContent":["<template>\n  <div class=\"NewWalkRecordPage\">\n    <!-- top -->\n    <div class=\"top\">\n      <div class=\"top_wrap\">\n        <div class=\"top_left\">\n          <img\n            class=\"icon\"\n            src=\"@/assets/backbutton.png\"\n            @click=\"$router.go(-1)\"\n          />\n        </div>\n        <div class=\"top_center\">산책기록</div>\n        <div class=\"top_right\"></div>\n      </div>\n    </div>\n    <!-- middle-->\n    <div class=\"middle\">\n      <div class=\"middle_top\">\n        <p>오늘은 {{ currentDate }}</p>\n        <div class=\"calendar_icon\" @click=\"toggleModal\">ㅤ📅</div>\n      </div>\n      <div class=\"middle_content\">\n        <div class=\"record_date\" v-if=\"showRecordPage\">\n          <p>선택한 날짜 : {{ currentMonth }} {{ selectedDate }}일</p>\n        </div>\n        <div class=\"walkdata_list\" v-if=\"showRecordPage\">\n          <div v-for=\"record in filteredRecords\" :key=\"record.date\" @click=\"openDailyReport(record)\">\n            <p>{{ record.date }} {{ record.title }}</p>\n          </div>\n        </div>\n\n        <div class=\"walkracord_background\" v-if=\"showWalkRecord && selectedRecord\">\n          <div class=\"dailyreport\">\n            <div class=\"reportbody\">\n              <div class=\"walkfriend\">\n                <h1>동행한 사람</h1>\n                <div class=\"person-container\">\n                  <img src=\"../assets/people/Preview-8.png\" />\n                  <img src=\"../assets/people/Preview-3.png\" />\n                </div>\n              </div>\n              <div class=\"todaypoint\">\n                <p>획득한<br />도토리</p>\n                <div class=\"point-container\">\n                  <img v-for=\"point in selectedRecord.walkData.points\" :key=\"point\" src=\"../assets/point.png\" class=\"point\" />\n                </div>\n              </div>\n\n              <div class=\"todaydata_1\">\n                <div class=\"walk\">\n                  <img src=\"../assets/walkicon.png\" />\n                  <p>{{ selectedRecord.walkData.steps }} 걸음</p>\n                </div>\n                <div class=\"kcal\">\n                  <img src=\"../assets/kcal.png\" />\n                  <p>{{ selectedRecord.walkData.calories }} 칼로리</p>\n                </div>\n              </div>\n\n              <div class=\"todaydata_2\">\n                <div class=\"time\">\n                  <img src=\"../assets/timericon.png\" />\n                  <p>{{ selectedRecord.walkData.time }}</p>\n                </div>\n                <div class=\"long\">\n                  <img src=\"../assets/distanceicon.png\" />\n                  <p>{{ selectedRecord.walkData.distance }}</p>\n                </div>\n              </div>\n            </div>\n            <button class=\"walkclose\" @click=\"closeWalkRecord\">닫기</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 모달창 부분을 추가합니다. v-if로 showModal 변수가 true일 때만 모달창이 나타납니다. -->\n    <div class=\"modal\" v-if=\"showModal\">\n      <div class=\"modal_content\">\n        <!-- 캘린더 내용 -->\n        <div class=\"calendar\">\n          <div class=\"calendar_header\">\n            <button @click=\"prevMonth\">&lt;</button>\n            <span>{{ currentMonth }}</span>\n            <button @click=\"nextMonth\">&gt;</button>\n          </div>\n          <!-- 요일 표시 부분 -->\n          <div class=\"calendar_days week-days\">\n            <div v-for=\"dayOfWeek in daysOfWeek\" :key=\"dayOfWeek\" class=\"day\">\n              {{ dayOfWeek }}\n            </div>\n          </div>\n          <div class=\"calendar_days\">\n            <div\n              v-for=\"day in daysInMonth\"\n              :key=\"day\"\n              class=\"day\"\n              @click=\"selectDate(day)\"\n            >\n              {{ day }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent, ref, computed, watch } from \"vue\";\nimport {\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  format,\n  addMonths,\n  subMonths,\n  getDay,\n} from \"date-fns\";\n\nexport default defineComponent({\n  name: \"NewWalkRecordpage\",\n  setup() {\n    const currentDate = ref(new Date());\n    const showModal = ref(false);\n    const showWalkRecord = ref(false);\n    const currentMonth = ref(new Date());\n\n    const showRecordPage = ref(false);\n    const selectedDate = ref(\"\");\n\n    const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const records = ref([\n      {\n        date: \"2023-10-01\",\n        title: \"산책 1\",\n        walkData: {\n          steps: 2548,\n          calories: 352,\n          time: \"12분 35초\",\n          distance: \"1.89 KM\",\n          points: [\"도토리 정보 1\", \"도토리 정보 2\", \"도토리 정보 3\", \"도토리 정보 4\", \"도토리 정보 5\"],\n        },\n      },\n      // 다른 기록 데이터 추가\n    ]);\n\n    const selectedRecord = ref(null);\n\n    // 현재 선택한 날짜가 변경될 때마다 호출되는 함수\n    function updateSelectedRecord() {\n      if (!selectedDate.value) {\n        selectedRecord.value = null;\n        return;\n      }\n\n      // 현재 선택한 날짜의 데이터를 찾습니다.\n      const formattedDate = `${currentMonth.value}-${selectedDate.value}`;\n      selectedRecord.value = records.value.find((record) => record.date === formattedDate);\n    }\n\n    // 선택한 날짜가 변경될 때마다 `updateSelectedRecord` 함수 호출\n    watch(selectedDate, () => {\n      updateSelectedRecord();\n    });\n\n    const filteredRecords = computed(() => {\n      return records.value.filter((record) => {\n        const recordDate = new Date(record.date);\n        return recordDate.getMonth() === currentMonth.value.getMonth();\n      });\n    });\n\n    function openDailyReport(record) {\n      selectedRecord.value = record;\n      showWalkRecord.value = true;\n    }\n\n    const daysInMonth = computed(() => {\n      const start = startOfMonth(currentMonth.value);\n      const end = endOfMonth(currentMonth.value);\n      const days = eachDayOfInterval({ start, end });\n\n      // 각 월의 첫째 날짜의 요일을 얻습니다.\n      const firstDayOfWeek = getDay(start);\n\n      // 첫째 날짜 이전에는 빈 칸을 생성합니다.\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        days.unshift(null);\n      }\n\n      return days.map((date) => (date ? format(date, \"dd\") : \"\"));\n    });\n\n    function showCalendarModal() {\n      showModal.value = true;\n    }\n\n    function closeModal() {\n      showModal.value = false;\n    }\n\n    function prevMonth() {\n      currentMonth.value = subMonths(currentMonth.value, 1);\n    }\n\n    function nextMonth() {\n      currentMonth.value = addMonths(currentMonth.value, 1);\n    }\n\n    function toggleModal() {\n      showModal.value = !showModal.value;\n    }\n\n    function closeModalOnOverlay() {\n      closeModal();\n    }\n\n    function selectDate(date) {\n      selectedDate.value = date;\n      updateSelectedRecord();\n      closeModal();\n      showRecordPage.value = true;\n    }\n\n    function toggleWalkRecord() {\n      showWalkRecord.value = !showWalkRecord.value;\n    }\n\n    function closeWalkRecord() {\n      showWalkRecord.value = false;\n    }\n\n    return {\n      currentDate: computed(() =>\n        format(currentDate.value, \"yyyy년 MM월 dd일\")\n      ),\n      showModal,\n      currentMonth: computed(() => format(currentMonth.value, \"yyyy년 MM월\")),\n      daysInMonth,\n      daysOfWeek,\n      showCalendarModal,\n      prevMonth,\n      nextMonth,\n      closeModal,\n      toggleModal,\n      closeModalOnOverlay,\n      showRecordPage,\n      selectDate,\n      selectedDate,\n      toggleWalkRecord,\n      showWalkRecord,\n      closeWalkRecord,\n      updateSelectedRecord,\n      selectedRecord,\n      filteredRecords,\n      openDailyReport,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.NewWalkRecordPage {\n  width: 100%;\n  height: 100vh;\n  overflow-y: auto;\n  background-color: #f1f8ff;\n}\n/* top */\n.NewWalkRecordPage .top {\nposition: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: 10%;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    background: none;\n    padding: 1%;\n}\n/* middle */\n.NewWalkRecordPage .middle {\n  position: relative;\n  width: 100%;\n  height: 90vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n}\n.NewWalkRecordPage .middle_top {\n  width: 100%;\n  height: 5vh;\n  background: #70b4cb;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.NewWalkRecordPage .middle_content {\n  width: 100%;\n  height: 85vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.NewWalkRecordPage .record_date {\n  height: 5vh;\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.NewWalkRecordPage .walkdata_list {\n  width: 49.5vh;\n  height: 13.5vh;\n  background-color: #ffffff;\n  margin: 5px;\n  border-radius: 1vh;\n  box-shadow: 0 2px 6px rgba(71, 71, 71, 0.2);\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n}\n\n/* 달력 모달 */\n.NewWalkRecordPage .modal {\n  width: 100%;\n  height: 100vh;\n  z-index: 1;\n  background-color: transparent;\n  position: fixed;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.NewWalkRecordPage .modal[style*=\"display: block;\"] {\n  /* 모달창 열릴 때 애니메이션 효과 추가 */\n  animation: modalOpenAnim 0.3s ease-out;\n}\n@keyframes modalOpenAnim {\n  from {\n    transform: translateY(-50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n.NewWalkRecordPage .modal_content {\n  width: 20em;\n  height: 22em;\n  border: 2px solid #b1c9e0;\n  border-radius: 17px;\n  padding: 1em;\n  box-sizing: border-box;\n  animation: modalOpenAnim-4bff843a 0.5s ease-out;\n  background-color: rgb(249, 252, 255);\n}\n.NewWalkRecordPage .calendar_header {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  font-weight: bold;\n  padding: 8px;\n  background-color: rgb(249, 252, 255);\n}\n.NewWalkRecordPage .calendar_days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 8px;\n  padding: 8px;\n}\n.NewWalkRecordPage .day {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n}\n.NewWalkRecordPage .calendar_icon {\n  cursor: pointer;\n}\n.NewWalkRecordPage .calendar_header button {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n.NewWalkRecordPage .calendar_header button:hover {\n  background-color: #f0f0f0;\n}\n.NewWalkRecordPage p {\n  display: block;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  margin-inline-start: 0;\n  margin-inline-end: 0;\n}\n\n/* 산책기록 모달 */\n.NewWalkRecordPage .walkracord_background {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background: white;\n}\n.NewWalkRecordPage .dailyreport {\n  background-color: #dfefff;\n  border-radius: 50px;\n  height: 73%;\n  margin-top: 1vh;\n  padding: 50px 0;\n}\n.NewWalkRecordPage .todaypoint {\n  padding: 0 70px;\n  display: flex; /* 추가 */\n}\n.NewWalkRecordPage .point-container {\n  display: flex;\n}\n.NewWalkRecordPage .walkfriend {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 8vh;\n  border-radius: 30px;\n  margin: 19px 0;\n  padding: 0 20px;\n}\n.NewWalkRecordPage .walkfriend h1 {\n  font-size: 2vh;\n  margin: 0 10px;\n}\n.NewWalkRecordPage .person-container {\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n}\n.NewWalkRecordPage .person-container img {\n  margin: 0 5px;\n}\n.NewWalkRecordPage .todaypoint {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 8vh;\n  border-radius: 30px;\n  margin: 19px 0;\n  padding: 0 20px;\n}\n.NewWalkRecordPage .todaypoint p {\n  font-weight: bold;\n  text-align: center;\n  font-size: 2vh;\n  margin-right: 10px;\n}\n.NewWalkRecordPage .point-container {\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n}\n.NewWalkRecordPage .point {\n  width: 3vh;\n  height: 3vh;\n  margin-right: 5px;\n}\n.NewWalkRecordPage .reportbody {\n  background-color: rgba(218, 213, 213, 0.893);\n  display: block;\n  height: 90%;\n  padding: 23px;\n}\n.NewWalkRecordPage .walkfriend img {\n  text-align: right;\n  margin: 5px;\n  width: 5vh;\n}\n.NewWalkRecordPage .walkfriend,\n.todaypoint {\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 9vh;\n  border-radius: 30px;\n  text-align: left;\n  margin: 1vh 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-content: space-evenly;\n}\n.NewWalkRecordPage .todaydata_1,\n.todaydata_2 {\n  height: 20vh;\n  width: 100%;\n  display: flex;\n  margin: auto;\n  margin-left: 0%;\n}\n.NewWalkRecordPage .todaydata_1 img,\n.todaydata_2 img {\n  width: 8vh;\n  margin: 2vh;\n}\n.NewWalkRecordPage .todaydata_1 p,\n.todaydata_2 p {\n  font-size: 3vh;\n}\n.NewWalkRecordPage .walk,\n.kcal,\n.time,\n.long {\n  flex: 1;\n  background-color: rgb(228, 228, 228);\n  border: 5px solid rgb(142, 141, 141);\n}\n.NewWalkRecordPage .walk {\n  border-radius: 30px 0 0 0;\n}\n.NewWalkRecordPage .kcal {\n  border-radius: 0 30px 0 0;\n}\n.NewWalkRecordPage .time {\n  border-radius: 0 0 0 30px;\n}\n.NewWalkRecordPage .long {\n  border-radius: 0 0 30px 0;\n}\n.NewWalkRecordPage .walkclose {\n  cursor: pointer;\n  border: none;\n  background: #02311e;\n  color: white;\n  font-size: 30px;\n  border-radius: 20px;\n  padding: 0.1vh 4vh;\n  margin: 1.2vh;\n}\n.NewWalkRecordPage .walkclose:hover {\n  background-color: rgba(182, 10, 10, 0.63);\n  font-weight: bold;\n  transform: scale(1, 1);\n  transition: all 0.3s;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}