{"ast":null,"code":"import { defineComponent, ref, computed } from \"vue\";\nimport { startOfMonth, endOfMonth, eachDayOfInterval, format, addMonths, subMonths, getDay } from \"date-fns\";\nexport default defineComponent({\n  name: \"NewWalkRecordpage\",\n  components: {\n    // Modal 컴포넌트 등록\n  },\n  setup() {\n    const currentDate = ref(new Date());\n    const showModal = ref(false);\n    const showWalkRocord = ref(false);\n    const currentMonth = ref(new Date());\n    const showRecordPage = ref(false);\n    const selectedDate = ref(\"\");\n    const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const records = ref([{\n      date: \"2023-10-01\",\n      title: \"산책 1\"\n      // 다른 필요한 기록 데이터 추가\n    }\n    // 다른 기록 데이터 추가\n    ]);\n\n    const selectedRecord = ref(null);\n    // 현재 선택한 날짜가 변경될 때마다 호출되는 함수\n    function updateSelectedRecord() {\n      if (!selectedDate.value) {\n        selectedRecord.value = null;\n        return;\n      }\n\n      // 현재 선택한 날짜의 데이터를 찾습니다.\n      const formattedDate = `${currentMonth.value}-${selectedDate.value}`;\n      selectedRecord.value = records.value.find(record => record.date === formattedDate);\n    }\n\n    // 선택한 날짜가 변경될 때마다 `updateSelectedRecord` 함수 호출\n    watch(selectedDate, () => {\n      updateSelectedRecord();\n    });\n    const daysInMonth = computed(() => {\n      const start = startOfMonth(currentMonth.value);\n      const end = endOfMonth(currentMonth.value);\n      const days = eachDayOfInterval({\n        start,\n        end\n      });\n\n      // 각 월의 첫째 날짜의 요일을 얻습니다.\n      const firstDayOfWeek = getDay(start);\n\n      // 첫째 날짜 이전에는 빈 칸을 생성합니다.\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        days.unshift(null);\n      }\n      return days.map(date => date ? format(date, \"dd\") : \"\");\n    });\n    function showCalendarModal() {\n      showModal.value = true;\n    }\n    function closeModal() {\n      showModal.value = false;\n    }\n    function prevMonth() {\n      currentMonth.value = subMonths(currentMonth.value, 1);\n    }\n    function nextMonth() {\n      currentMonth.value = addMonths(currentMonth.value, 1);\n    }\n    function toggleModal() {\n      showModal.value = !showModal.value;\n    }\n    function closeModalOnOverlay() {\n      closeModal();\n    }\n    function selectDate(date) {\n      selectedDate.value = date;\n      updateSelectedRecord();\n      closeModal();\n      showRecordPage.value = true;\n    }\n    function toggleWalkRecord() {\n      showWalkRocord.value = !showWalkRocord.value;\n    }\n    function closeWalkRecord() {\n      showWalkRocord.value = false;\n    }\n    return {\n      currentDate: computed(() => format(currentDate.value, \"yyyy년 MM월 dd일\")),\n      showModal,\n      currentMonth: computed(() => format(currentMonth.value, \"yyyy년 MM월\")),\n      daysInMonth,\n      daysOfWeek,\n      showCalendarModal,\n      prevMonth,\n      nextMonth,\n      closeModal,\n      toggleModal,\n      closeModalOnOverlay,\n      showRecordPage,\n      selectDate,\n      selectedDate,\n      toggleWalkRecord,\n      showWalkRocord,\n      closeWalkRecord,\n      updateSelectedRecord,\n      selectedRecord\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","ref","computed","startOfMonth","endOfMonth","eachDayOfInterval","format","addMonths","subMonths","getDay","name","components","setup","currentDate","Date","showModal","showWalkRocord","currentMonth","showRecordPage","selectedDate","daysOfWeek","records","date","title","selectedRecord","updateSelectedRecord","value","formattedDate","find","record","watch","daysInMonth","start","end","days","firstDayOfWeek","i","unshift","map","showCalendarModal","closeModal","prevMonth","nextMonth","toggleModal","closeModalOnOverlay","selectDate","toggleWalkRecord","closeWalkRecord"],"sources":["/Users/nayoung/Downloads/2023_09_23_walkooproject-main/src/components/NewWalkRecord.vue"],"sourcesContent":["<template>\n  <div class=\"NewWalkRecordPage\">\n    <!-- top -->\n    <div class=\"top\">\n      <div class=\"top_wrap\">\n        <div class=\"top_left\">\n          <img\n            class=\"icon\"\n            src=\"@/assets/backbutton.png\"\n            @click=\"$router.go(-1)\"\n          />\n        </div>\n        <div class=\"top_center\">산책기록</div>\n        <div class=\"top_right\"></div>\n      </div>\n      </div>\n    <!-- middle-->\n    <div class=\"middle\">\n      <div class=\"middle_top\">\n        <p>오늘은 {{ currentDate }}</p>\n        <div class=\"calendar_icon\" @click=\"toggleModal\">ㅤ📅</div>\n      </div>\n      <div class=\"middle_content\">\n        <div class=\"record_date\" v-if=\"showRecordPage\">\n          <p>선택한 날짜 : {{ currentMonth }} {{ selectedDate }}일</p>\n        </div>\n        <div class=\"walkdata_list\" v-if=\"showRecordPage && selectedRecord\" @click=\"toggleWalkRecord\">\n  <p>{{ selectedRecord.date }} {{ selectedRecord.title }}</p>\n</div>\n\n        <div class=\"walkracord_background\" v-if=\"showWalkRocord\">\n          <div class=\"dailyreport\">\n            <div class=\"reportbody\">\n              <div class=\"walkfriend\">\n                <h1>동행한 사람</h1>\n                <div class=\"person-container\">\n                  <img src=\"../assets/people/Preview-8.png\" />\n                  <img src=\"../assets/people/Preview-3.png\" />\n                </div>\n              </div>\n              <div class=\"todaypoint\">\n                <p>획득한<br />도토리</p>\n                <div class=\"point-container\"></div>\n                <img src=\"../assets/point.png\" class=\"point\" />\n                <img src=\"../assets/point.png\" class=\"point\" />\n                <img src=\"../assets/point.png\" class=\"point\" />\n                <img src=\"../assets/point.png\" class=\"point\" />\n                <img src=\"../assets/point.png\" class=\"point\" />\n              </div>\n\n              <div class=\"todaydata_1\">\n                <div class=\"walk\">\n                  <img src=\"../assets/walkicon.png\" />\n                  <p>2548 걸음</p>\n                </div>\n                <div class=\"kcal\">\n                  <img src=\"../assets/kcal.png\" />\n                  <p>352 칼로리</p>\n                </div>\n              </div>\n\n              <div class=\"todaydata_2\">\n                <div class=\"time\">\n                  <img src=\"../assets/timericon.png\" />\n                  <p>12분 35초</p>\n                </div>\n\n                <div class=\"long\">\n                  <img src=\"../assets/distanceicon.png\" />\n                  <p>1.89 KM</p>\n                </div>\n              </div>\n            </div>\n            <button class=\"walkclose\" @click=\"closeWalkRecord\">닫기</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- 모달창 부분을 추가합니다. v-if로 showModal 변수가 true일 때만 모달창이 나타납니다. -->\n    <!-- @click=\"closeModalOnOverlay\" -->\n    <div class=\"modal\" v-if=\"showModal\">\n      <div class=\"modal_content\">\n        <!-- 캘린더 내용 -->\n        <div class=\"calendar\">\n          <div class=\"calendar_header\">\n            <button @click=\"prevMonth\">&lt;</button>\n            <span>{{ currentMonth }}</span>\n            <button @click=\"nextMonth\">&gt;</button>\n          </div>\n          <!-- 요일 표시 부분 -->\n          <div class=\"calendar_days week-days\">\n            <div v-for=\"dayOfWeek in daysOfWeek\" :key=\"dayOfWeek\" class=\"day\">\n              {{ dayOfWeek }}\n            </div>\n          </div>\n          <div class=\"calendar_days\">\n            <div\n              v-for=\"day in daysInMonth\"\n              :key=\"day\"\n              class=\"day\"\n              @click=\"selectDate(day)\"\n            >\n              {{ day }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport { defineComponent, ref, computed } from \"vue\";\nimport {\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  format,\n  addMonths,\n  subMonths,\n  getDay,\n} from \"date-fns\";\n\nexport default defineComponent({\n  name: \"NewWalkRecordpage\",\n  components: {\n    // Modal 컴포넌트 등록\n  },\n  setup() {\n    const currentDate = ref(new Date());\n    const showModal = ref(false);\n    const showWalkRocord = ref(false);\n    const currentMonth = ref(new Date());\n\n    const showRecordPage = ref(false);\n    const selectedDate = ref(\"\");\n\n    const daysOfWeek = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n    const records = ref([\n    {\n      date: \"2023-10-01\",\n      title: \"산책 1\",\n      // 다른 필요한 기록 데이터 추가\n    },\n    // 다른 기록 데이터 추가\n  ]);\n\n  const selectedRecord = ref(null);\n    // 현재 선택한 날짜가 변경될 때마다 호출되는 함수\n    function updateSelectedRecord() {\n      if (!selectedDate.value) {\n        selectedRecord.value = null;\n        return;\n      }\n\n      // 현재 선택한 날짜의 데이터를 찾습니다.\n      const formattedDate = `${currentMonth.value}-${selectedDate.value}`;\n      selectedRecord.value = records.value.find((record) => record.date === formattedDate);\n    }\n\n    // 선택한 날짜가 변경될 때마다 `updateSelectedRecord` 함수 호출\n    watch(selectedDate, () => {\n      updateSelectedRecord();\n    });\n\n    const daysInMonth = computed(() => {\n      const start = startOfMonth(currentMonth.value);\n      const end = endOfMonth(currentMonth.value);\n      const days = eachDayOfInterval({ start, end });\n\n      // 각 월의 첫째 날짜의 요일을 얻습니다.\n      const firstDayOfWeek = getDay(start);\n\n      // 첫째 날짜 이전에는 빈 칸을 생성합니다.\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        days.unshift(null);\n      }\n\n      return days.map((date) => (date ? format(date, \"dd\") : \"\"));\n    });\n\n    function showCalendarModal() {\n      showModal.value = true;\n    }\n    function closeModal() {\n      showModal.value = false;\n    }\n\n    function prevMonth() {\n      currentMonth.value = subMonths(currentMonth.value, 1);\n    }\n\n    function nextMonth() {\n      currentMonth.value = addMonths(currentMonth.value, 1);\n    }\n\n    function toggleModal() {\n      showModal.value = !showModal.value;\n    }\n\n    function closeModalOnOverlay() {\n      closeModal();\n    }\n\n    function selectDate(date) {\n      selectedDate.value = date;\n      updateSelectedRecord();\n      closeModal();\n      showRecordPage.value = true;\n    }\n\n    function toggleWalkRecord() {\n      showWalkRocord.value = !showWalkRocord.value;\n    }\n    function closeWalkRecord() {\n      showWalkRocord.value = false;\n    }\n\n    return {\n      currentDate: computed(() =>\n        format(currentDate.value, \"yyyy년 MM월 dd일\")\n      ),\n      showModal,\n      currentMonth: computed(() => format(currentMonth.value, \"yyyy년 MM월\")),\n      daysInMonth,\n      daysOfWeek,\n      showCalendarModal,\n      prevMonth,\n      nextMonth,\n      closeModal,\n      toggleModal,\n      closeModalOnOverlay,\n      showRecordPage,\n      selectDate,\n      selectedDate,\n      toggleWalkRecord,\n      showWalkRocord,\n      closeWalkRecord,\n      updateSelectedRecord,\n      selectedRecord,\n    };\n  },\n});\n</script>\n\n<style scoped>\n.NewWalkRecordPage {\n  width: 100%;\n  height: 100vh;\n  overflow-y: auto;\n  background-color: #f1f8ff;\n}\n/* top */\n.NewWalkRecordPage .top {\nposition: relative;\n    box-sizing: border-box;\n    width: 100%;\n    height: 10%;\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    background: none;\n    padding: 1%;\n}\n/* middle */\n.NewWalkRecordPage .middle {\n  position: relative;\n  width: 100%;\n  height: 90vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n}\n.NewWalkRecordPage .middle_top {\n  width: 100%;\n  height: 5vh;\n  background: #70b4cb;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.NewWalkRecordPage .middle_content {\n  width: 100%;\n  height: 85vh;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.NewWalkRecordPage .record_date {\n  height: 5vh;\n  width: 100%;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.NewWalkRecordPage .walkdata_list {\n  width: 80%;\n  height: 15%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: white;\n  border-radius: 10px;\n}\n\n/* 달력 모달 */\n.NewWalkRecordPage .modal {\n  width: 100%;\n  height: 100vh;\n  z-index: 1;\n  background-color: transparent;\n  position: fixed;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.NewWalkRecordPage .modal[style*=\"display: block;\"] {\n  /* 모달창 열릴 때 애니메이션 효과 추가 */\n  animation: modalOpenAnim 0.3s ease-out;\n}\n@keyframes modalOpenAnim {\n  from {\n    transform: translateY(-50px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n.NewWalkRecordPage .modal_content {\n  width: 20em;\n  height: 22em;\n  border: 2px solid #b1c9e0;\n  border-radius: 17px;\n  padding: 1em;\n  box-sizing: border-box;\n  animation: modalOpenAnim-4bff843a 0.5s ease-out;\n  background-color: rgb(249, 252, 255);\n}\n.NewWalkRecordPage .calendar_header {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  font-weight: bold;\n  padding: 8px;\n  background-color: rgb(249, 252, 255);\n}\n.NewWalkRecordPage .calendar_days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 8px;\n  padding: 8px;\n}\n.NewWalkRecordPage .day {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 32px;\n  height: 32px;\n}\n.NewWalkRecordPage .calendar_icon {\n  cursor: pointer;\n}\n.NewWalkRecordPage .calendar_header button {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n.NewWalkRecordPage .calendar_header button:hover {\n  background-color: #f0f0f0;\n}\n.NewWalkRecordPage p {\n  display: block;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  margin-inline-start: 0;\n  margin-inline-end: 0;\n}\n\n/* 산책기록 모달 */\n.NewWalkRecordPage .walkracord_background {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  background: white;\n}\n.NewWalkRecordPage .dailyreport {\n  background-color: #dfefff;\n  border-radius: 50px;\n  height: 73%;\n  margin-top: 1vh;\n  padding: 50px 0;\n}\n.NewWalkRecordPage .todaypoint {\n  padding: 0 70px;\n  display: flex; /* 추가 */\n}\n.NewWalkRecordPage .point-container {\n  display: flex;\n}\n.NewWalkRecordPage .walkfriend {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 8vh;\n  border-radius: 30px;\n  margin: 19px 0;\n  padding: 0 20px;\n}\n.NewWalkRecordPage .walkfriend h1 {\n  font-size: 2vh;\n  margin: 0 10px;\n}\n.NewWalkRecordPage .person-container {\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n}\n.NewWalkRecordPage .person-container img {\n  margin: 0 5px;\n}\n.NewWalkRecordPage .todaypoint {\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 8vh;\n  border-radius: 30px;\n  margin: 19px 0;\n  padding: 0 20px;\n}\n.NewWalkRecordPage .todaypoint p {\n  font-weight: bold;\n  text-align: center;\n  font-size: 2vh;\n  margin-right: 10px;\n}\n.NewWalkRecordPage .point-container {\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n}\n.NewWalkRecordPage .point {\n  width: 3vh;\n  height: 3vh;\n  margin-right: 5px;\n}\n.NewWalkRecordPage .reportbody {\n  background-color: rgba(218, 213, 213, 0.893);\n  display: block;\n  height: 90%;\n  padding: 23px;\n}\n.NewWalkRecordPage .walkfriend img {\n  text-align: right;\n  margin: 5px;\n  width: 5vh;\n}\n.NewWalkRecordPage .walkfriend,\n.todaypoint {\n  border: 7px solid rgb(179, 179, 179);\n  background-color: rgb(255, 255, 255);\n  height: 9vh;\n  border-radius: 30px;\n  text-align: left;\n  margin: 1vh 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  justify-content: space-evenly;\n}\n.NewWalkRecordPage .todaydata_1,\n.todaydata_2 {\n  height: 20vh;\n  width: 100%;\n  display: flex;\n  margin: auto;\n  margin-left: 0%;\n}\n.NewWalkRecordPage .todaydata_1 img,\n.todaydata_2 img {\n  width: 8vh;\n  margin: 2vh;\n}\n.NewWalkRecordPage .todaydata_1 p,\n.todaydata_2 p {\n  font-size: 3vh;\n}\n.NewWalkRecordPage .walk,\n.kcal,\n.time,\n.long {\n  flex: 1;\n  background-color: rgb(228, 228, 228);\n  border: 5px solid rgb(142, 141, 141);\n}\n.NewWalkRecordPage .walk {\n  border-radius: 30px 0 0 0;\n}\n.NewWalkRecordPage .kcal {\n  border-radius: 0 30px 0 0;\n}\n.NewWalkRecordPage .time {\n  border-radius: 0 0 0 30px;\n}\n.NewWalkRecordPage .long {\n  border-radius: 0 0 30px 0;\n}\n.NewWalkRecordPage .walkclose {\n  cursor: pointer;\n  border: none;\n  background: #02311e;\n  color: white;\n  font-size: 30px;\n  border-radius: 20px;\n  padding: 0.1vh 4vh;\n  margin: 1.2vh;\n}\n.NewWalkRecordPage .walkclose:hover {\n  background-color: rgba(182, 10, 10, 0.63);\n  font-weight: bold;\n  transform: scale(1, 1);\n  transition: all 0.3s;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}